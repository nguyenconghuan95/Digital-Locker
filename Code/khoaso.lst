CCS PCM C Compiler, Version 4.104, 5967               07-Dec-16 13:37

               Filename: C:\Users\huannc\Desktop\Projects\Khoa cua so\khoaso.lst

               ROM used: 928 words (23%)
                         Largest free fragment is 2048
               RAM used: 40 (21%) at main() level
                         44 (23%) worst case
               Stack:    3 locations

*
0000:  MOVLW  02
0001:  MOVWF  0A
0002:  GOTO   216
0003:  NOP
.................... #include "C:\Users\huannc\Desktop\Projects\Khoa cua so\khoaso.h" 
.................... #include <16F873A.h> 
.................... //////// Standard Header file for the PIC16F873A device //////////////// 
.................... #device PIC16F873A 
.................... #list 
....................  
.................... #device adc=8 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES HS                    	//High speed Osc (> 4mhz for PCM/PCH) (>10mhz for PCD) 
.................... #FUSES NOPUT                 	//No Power Up Timer 
.................... #FUSES NOPROTECT             	//Code not protected from reading 
.................... #FUSES NODEBUG               	//No Debug mode for ICD 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOCPD                 	//No EE protection 
.................... #FUSES NOWRT                 	//Program memory not write protected 
.................... #FUSES RESERVED              	//Used to set the reserved FUSE bits 
....................  
.................... #use delay(clock=11059000) 
*
003F:  MOVLW  4A
0040:  MOVWF  04
0041:  MOVF   00,W
0042:  BTFSC  03.2
0043:  GOTO   051
0044:  MOVLW  03
0045:  MOVWF  21
0046:  CLRF   20
0047:  DECFSZ 20,F
0048:  GOTO   047
0049:  DECFSZ 21,F
004A:  GOTO   046
004B:  MOVLW  95
004C:  MOVWF  20
004D:  DECFSZ 20,F
004E:  GOTO   04D
004F:  DECFSZ 00,F
0050:  GOTO   044
0051:  RETURN
*
0183:  MOVLW  07
0184:  SUBWF  47,F
0185:  BTFSS  03.0
0186:  GOTO   198
0187:  MOVLW  47
0188:  MOVWF  04
0189:  MOVLW  FC
018A:  ANDWF  00,F
018B:  BCF    03.0
018C:  RRF    00,F
018D:  RRF    00,F
018E:  MOVF   00,W
018F:  BTFSC  03.2
0190:  GOTO   198
0191:  MOVLW  02
0192:  MOVWF  20
0193:  DECFSZ 20,F
0194:  GOTO   193
0195:  NOP
0196:  DECFSZ 00,F
0197:  GOTO   191
0198:  RETURN
.................... #use rs232(baud=9600,parity=N,xmit=PIN_C6,rcv=PIN_C7,bits=8) 
....................  
....................  
....................  
.................... void Init_LCD(); 
.................... void WrCmd_LCD(unsigned char cmd); 
.................... void WrData_LCD(unsigned char data); 
.................... void WrStr_LCD(unsigned char *s); 
.................... void button(); 
.................... void button_password(); 
.................... void button_check(); 
.................... void check_password(); 
....................  
.................... unsigned char password[4], check[4]; 
.................... unsigned int i,k,j, value; 
.................... unsigned char str[20]; 
....................  
.................... //LCD code 
.................... void WrCmd_LCD(unsigned char cmd) 
.................... { 
....................     output_low(PIN_A0); 
*
0052:  BSF    03.5
0053:  BCF    05.0
0054:  BCF    03.5
0055:  BCF    05.0
....................     output_high(PIN_A1); 
0056:  BSF    03.5
0057:  BCF    05.1
0058:  BCF    03.5
0059:  BSF    05.1
....................     output_b(cmd); 
005A:  BSF    03.5
005B:  CLRF   06
005C:  BCF    03.5
005D:  MOVF   49,W
005E:  MOVWF  06
....................     delay_ms(10); 
005F:  MOVLW  0A
0060:  MOVWF  4A
0061:  CALL   03F
....................     output_low(PIN_A1); 
0062:  BSF    03.5
0063:  BCF    05.1
0064:  BCF    03.5
0065:  BCF    05.1
....................     delay_ms(10); 
0066:  MOVLW  0A
0067:  MOVWF  4A
0068:  CALL   03F
.................... } 
0069:  RETURN
....................  
.................... void WrData_LCD(unsigned char data) 
.................... { 
....................     output_high(PIN_A0); 
*
0107:  BSF    03.5
0108:  BCF    05.0
0109:  BCF    03.5
010A:  BSF    05.0
....................     output_high(PIN_A1); 
010B:  BSF    03.5
010C:  BCF    05.1
010D:  BCF    03.5
010E:  BSF    05.1
....................     output_b(data); 
010F:  BSF    03.5
0110:  CLRF   06
0111:  BCF    03.5
0112:  MOVF   48,W
0113:  MOVWF  06
....................     delay_ms(10); 
0114:  MOVLW  0A
0115:  MOVWF  4A
0116:  CALL   03F
....................     output_low(PIN_A1); 
0117:  BSF    03.5
0118:  BCF    05.1
0119:  BCF    03.5
011A:  BCF    05.1
....................     delay_ms(10); 
011B:  MOVLW  0A
011C:  MOVWF  4A
011D:  CALL   03F
.................... } 
011E:  RETURN
....................  
.................... void WrStr_LCD(unsigned char *s) 
.................... { 
....................    while(*s) 
....................    { 
011F:  MOVF   46,W
0120:  MOVWF  04
0121:  MOVF   00,F
0122:  BTFSC  03.2
0123:  GOTO   12C
....................        WrData_LCD(*s); 
0124:  MOVF   46,W
0125:  MOVWF  04
0126:  MOVF   00,W
0127:  MOVWF  47
0128:  MOVWF  48
0129:  CALL   107
....................        s++; 
012A:  INCF   46,F
....................    } 
012B:  GOTO   11F
.................... } 
012C:  RETURN
....................  
.................... void Init_LCD(void) 
.................... { 
....................     output_low(PIN_A0); 
*
006A:  BSF    03.5
006B:  BCF    05.0
006C:  BCF    03.5
006D:  BCF    05.0
....................     output_low(PIN_A1); 
006E:  BSF    03.5
006F:  BCF    05.1
0070:  BCF    03.5
0071:  BCF    05.1
....................     output_b(0); 
0072:  BSF    03.5
0073:  CLRF   06
0074:  BCF    03.5
0075:  CLRF   06
....................     delay_ms(200); 
0076:  MOVLW  C8
0077:  MOVWF  4A
0078:  CALL   03F
....................     WrCmd_LCD(0x30); 
0079:  MOVLW  30
007A:  MOVWF  49
007B:  CALL   052
....................     delay_ms(50); 
007C:  MOVLW  32
007D:  MOVWF  4A
007E:  CALL   03F
....................     WrCmd_LCD(0x30); 
007F:  MOVLW  30
0080:  MOVWF  49
0081:  CALL   052
....................     delay_ms(110); 
0082:  MOVLW  6E
0083:  MOVWF  4A
0084:  CALL   03F
....................     WrCmd_LCD(0x30); 
0085:  MOVLW  30
0086:  MOVWF  49
0087:  CALL   052
....................     delay_ms(10); 
0088:  MOVLW  0A
0089:  MOVWF  4A
008A:  CALL   03F
....................     WrCmd_LCD(0x38); 
008B:  MOVLW  38
008C:  MOVWF  49
008D:  CALL   052
....................     delay_ms(10); 
008E:  MOVLW  0A
008F:  MOVWF  4A
0090:  CALL   03F
....................     WrCmd_LCD(0x0C); 
0091:  MOVLW  0C
0092:  MOVWF  49
0093:  CALL   052
....................     delay_ms(10); 
0094:  MOVLW  0A
0095:  MOVWF  4A
0096:  CALL   03F
....................     WrCmd_LCD(0x06); 
0097:  MOVLW  06
0098:  MOVWF  49
0099:  CALL   052
....................     delay_ms(10); 
009A:  MOVLW  0A
009B:  MOVWF  4A
009C:  CALL   03F
....................     WrCmd_LCD(0x01); 
009D:  MOVLW  01
009E:  MOVWF  49
009F:  CALL   052
....................     delay_ms(10); 
00A0:  MOVLW  0A
00A1:  MOVWF  4A
00A2:  CALL   03F
.................... } 
00A3:  BCF    0A.3
00A4:  GOTO   239 (RETURN)
....................  
.................... void SetCursor_LCD(unsigned char m,unsigned char n) 
.................... { 
....................     if (m==1) 
00A5:  DECFSZ 46,W
00A6:  GOTO   0B0
....................     { 
....................         WrCmd_LCD(0x80+n); 
00A7:  MOVLW  80
00A8:  ADDWF  47,W
00A9:  MOVWF  48
00AA:  MOVWF  49
00AB:  CALL   052
....................         delay_ms(10); 
00AC:  MOVLW  0A
00AD:  MOVWF  4A
00AE:  CALL   03F
....................     } 
....................     else 
00AF:  GOTO   0B8
....................     { 
....................         WrCmd_LCD(0xC0+n); 
00B0:  MOVLW  C0
00B1:  ADDWF  47,W
00B2:  MOVWF  48
00B3:  MOVWF  49
00B4:  CALL   052
....................         delay_ms(10); 
00B5:  MOVLW  0A
00B6:  MOVWF  4A
00B7:  CALL   03F
....................     } 
.................... } 
00B8:  RETURN
....................  
.................... void button() 
.................... { 
....................     while(input(PIN_C4)==0) 
....................     {} 
*
012D:  BSF    44.4
012E:  MOVF   44,W
012F:  BSF    03.5
0130:  MOVWF  07
0131:  BCF    03.5
0132:  BTFSS  07.4
0133:  GOTO   12D
....................     while(input(PIN_C4)==1) 
....................     { 
0134:  BSF    44.4
0135:  MOVF   44,W
0136:  BSF    03.5
0137:  MOVWF  07
0138:  BCF    03.5
0139:  BTFSS  07.4
013A:  GOTO   15A
....................        
....................       value=(input_c()<<4)>>4; 
013B:  MOVLW  FF
013C:  MOVWF  44
013D:  BSF    03.5
013E:  MOVWF  07
013F:  BCF    03.5
0140:  SWAPF  07,W
0141:  MOVWF  20
0142:  MOVLW  F0
0143:  ANDWF  20,F
0144:  MOVF   20,W
0145:  SWAPF  20,W
0146:  MOVWF  2F
0147:  MOVLW  0F
0148:  ANDWF  2F,F
....................       delay_ms(10);     
0149:  MOVLW  0A
014A:  MOVWF  4A
014B:  CALL   03F
....................       if (value>7) 
014C:  MOVF   2F,W
014D:  SUBLW  07
014E:  BTFSC  03.0
014F:  GOTO   153
....................          value=value-8; 
0150:  MOVLW  08
0151:  SUBWF  2F,F
....................       else if (value<6) 
0152:  GOTO   159
0153:  MOVF   2F,W
0154:  SUBLW  05
0155:  BTFSS  03.0
0156:  GOTO   159
....................          value=value+8; 
0157:  MOVLW  08
0158:  ADDWF  2F,F
....................     } 
0159:  GOTO   134
.................... } 
015A:  RETURN
....................  
.................... void button_password() 
.................... { 
....................    if (value<10) 
015B:  MOVF   2F,W
015C:  SUBLW  09
015D:  BTFSS  03.0
015E:  GOTO   16B
....................    { 
....................       WrData_LCD(0x2A); 
015F:  MOVLW  2A
0160:  MOVWF  48
0161:  CALL   107
....................       delay_ms(10); 
0162:  MOVLW  0A
0163:  MOVWF  4A
0164:  CALL   03F
....................       password[i]=value; 
0165:  MOVLW  24
0166:  ADDWF  2C,W
0167:  MOVWF  04
0168:  MOVF   2F,W
0169:  MOVWF  00
....................    } 
....................    else if (value==10)               
016A:  GOTO   182
016B:  MOVF   2F,W
016C:  SUBLW  0A
016D:  BTFSS  03.2
016E:  GOTO   181
....................    { 
....................       WrCmd_LCD(0x10); 
016F:  MOVLW  10
0170:  MOVWF  49
0171:  CALL   052
....................       delay_ms(10); 
0172:  MOVLW  0A
0173:  MOVWF  4A
0174:  CALL   03F
....................       WrData_LCD(' '); 
0175:  MOVLW  20
0176:  MOVWF  48
0177:  CALL   107
....................       delay_ms(10); 
0178:  MOVLW  0A
0179:  MOVWF  4A
017A:  CALL   03F
....................       WrCmd_LCD(0x10); 
017B:  MOVLW  10
017C:  MOVWF  49
017D:  CALL   052
....................       i=i-2;                       
017E:  MOVLW  02
017F:  SUBWF  2C,F
....................    } 
....................    else  
0180:  GOTO   182
....................    { 
....................       i--; 
0181:  DECF   2C,F
....................    }         
.................... } 
0182:  RETURN
....................  
.................... void check_password() 
.................... { 
....................    for (i=0;i<4;i++) 
*
01E1:  CLRF   2C
01E2:  MOVF   2C,W
01E3:  SUBLW  03
01E4:  BTFSS  03.0
01E5:  GOTO   1F4
....................    { 
....................       if (check[i]==password[i]) 
01E6:  MOVLW  28
01E7:  ADDWF  2C,W
01E8:  MOVWF  04
01E9:  MOVF   00,W
01EA:  MOVWF  46
01EB:  MOVLW  24
01EC:  ADDWF  2C,W
01ED:  MOVWF  04
01EE:  MOVF   00,W
01EF:  SUBWF  46,W
01F0:  BTFSC  03.2
....................       j++; 
01F1:  INCF   2E,F
....................    } 
01F2:  INCF   2C,F
01F3:  GOTO   1E2
.................... } 
01F4:  RETURN
....................     
....................  
.................... void button_check() 
.................... { 
....................    if (value<10) 
*
01B9:  MOVF   2F,W
01BA:  SUBLW  09
01BB:  BTFSS  03.0
01BC:  GOTO   1C9
....................    { 
....................       WrData_LCD(0X2A); 
01BD:  MOVLW  2A
01BE:  MOVWF  48
01BF:  CALL   107
....................       delay_ms(10); 
01C0:  MOVLW  0A
01C1:  MOVWF  4A
01C2:  CALL   03F
....................       check[i]=value; 
01C3:  MOVLW  28
01C4:  ADDWF  2C,W
01C5:  MOVWF  04
01C6:  MOVF   2F,W
01C7:  MOVWF  00
....................    } 
....................    else if (value==10)               
01C8:  GOTO   1E0
01C9:  MOVF   2F,W
01CA:  SUBLW  0A
01CB:  BTFSS  03.2
01CC:  GOTO   1DF
....................    { 
....................       WrCmd_LCD(0x10); 
01CD:  MOVLW  10
01CE:  MOVWF  49
01CF:  CALL   052
....................       delay_ms(10); 
01D0:  MOVLW  0A
01D1:  MOVWF  4A
01D2:  CALL   03F
....................       WrData_LCD(' '); 
01D3:  MOVLW  20
01D4:  MOVWF  48
01D5:  CALL   107
....................       delay_ms(10); 
01D6:  MOVLW  0A
01D7:  MOVWF  4A
01D8:  CALL   03F
....................       WrCmd_LCD(0x10); 
01D9:  MOVLW  10
01DA:  MOVWF  49
01DB:  CALL   052
....................       i=i-2;                       
01DC:  MOVLW  02
01DD:  SUBWF  2C,F
....................    } 
....................    else  
01DE:  GOTO   1E0
....................    { 
....................       i--; 
01DF:  DECF   2C,F
....................    }         
.................... } 
01E0:  RETURN
....................  
.................... void open() //60 Degree 
.................... { 
....................   for(i=0;i<50;i++) 
*
01F5:  CLRF   2C
01F6:  MOVF   2C,W
01F7:  SUBLW  31
01F8:  BTFSS  03.0
01F9:  GOTO   214
....................   { 
....................     output_high(PIN_A3); 
01FA:  BSF    03.5
01FB:  BCF    05.3
01FC:  BCF    03.5
01FD:  BSF    05.3
....................     Delay_us(1150); 
01FE:  MOVLW  01
01FF:  MOVWF  4A
0200:  CALL   03F
0201:  MOVLW  96
0202:  MOVWF  47
0203:  CALL   183
....................     output_low(PIN_A3); 
0204:  BSF    03.5
0205:  BCF    05.3
0206:  BCF    03.5
0207:  BCF    05.3
....................     Delay_us(18850); 
0208:  MOVLW  12
0209:  MOVWF  4A
020A:  CALL   03F
020B:  MOVLW  05
020C:  MOVWF  46
020D:  MOVLW  A9
020E:  MOVWF  47
020F:  CALL   183
0210:  DECFSZ 46,F
0211:  GOTO   20D
....................   } 
0212:  INCF   2C,F
0213:  GOTO   1F6
.................... } 
0214:  BCF    0A.3
0215:  GOTO   2C5 (RETURN)
....................  
.................... void lock() //120 Degree 
.................... { 
....................    
....................   for(i=0;i<50;i++) 
*
0199:  CLRF   2C
019A:  MOVF   2C,W
019B:  SUBLW  31
019C:  BTFSS  03.0
019D:  GOTO   1B8
....................   { 
....................     output_high(PIN_A3); 
019E:  BSF    03.5
019F:  BCF    05.3
01A0:  BCF    03.5
01A1:  BSF    05.3
....................     Delay_us(1850); 
01A2:  MOVLW  01
01A3:  MOVWF  4A
01A4:  CALL   03F
01A5:  MOVLW  05
01A6:  MOVWF  46
01A7:  MOVLW  A9
01A8:  MOVWF  47
01A9:  CALL   183
01AA:  DECFSZ 46,F
01AB:  GOTO   1A7
....................     output_low(PIN_A3); 
01AC:  BSF    03.5
01AD:  BCF    05.3
01AE:  BCF    03.5
01AF:  BCF    05.3
....................     Delay_us(18150); 
01B0:  MOVLW  12
01B1:  MOVWF  4A
01B2:  CALL   03F
01B3:  MOVLW  96
01B4:  MOVWF  47
01B5:  CALL   183
....................   } 
01B6:  INCF   2C,F
01B7:  GOTO   19A
.................... } 
01B8:  RETURN
....................  
.................... //Main 
.................... void main() 
.................... { 
*
003E:  DATA 00,00
*
0216:  CLRF   04
0217:  MOVLW  1F
0218:  ANDWF  03,F
0219:  MOVLW  11
021A:  BSF    03.5
021B:  MOVWF  19
021C:  MOVLW  A2
021D:  MOVWF  18
021E:  MOVLW  90
021F:  BCF    03.5
0220:  MOVWF  18
0221:  BSF    03.5
0222:  BSF    1F.0
0223:  BSF    1F.1
0224:  BSF    1F.2
0225:  BCF    1F.3
0226:  MOVLW  07
0227:  MOVWF  1C
....................    set_tris_b(0x00); 
*
022C:  MOVLW  00
022D:  BSF    03.5
022E:  MOVWF  06
....................    set_tris_a(0x00); 
022F:  MOVWF  05
....................    set_tris_c(0X1F); 
0230:  MOVLW  1F
0231:  MOVWF  07
0232:  BCF    03.5
0233:  MOVWF  44
....................    output_a(0); 
0234:  BSF    03.5
0235:  CLRF   05
0236:  BCF    03.5
0237:  CLRF   05
....................    Init_LCD(); 
0238:  GOTO   06A
....................    SetCursor_LCD(1,0); 
0239:  MOVLW  01
023A:  MOVWF  46
023B:  CLRF   47
023C:  CALL   0A5
....................    sprintf(str,"Tao MK:"); 
023D:  MOVLW  30
023E:  MOVWF  45
023F:  MOVLW  04
0240:  BSF    03.6
0241:  MOVWF  0D
0242:  MOVLW  00
0243:  MOVWF  0F
0244:  BCF    03.6
0245:  CALL   0C1
....................    WrStr_LCD(str); 
0246:  MOVLW  30
0247:  MOVWF  46
0248:  CALL   11F
....................    delay_ms(10); 
0249:  MOVLW  0A
024A:  MOVWF  4A
024B:  CALL   03F
....................    for (i=0;i<4;i++) 
024C:  CLRF   2C
024D:  MOVF   2C,W
024E:  SUBLW  03
024F:  BTFSS  03.0
0250:  GOTO   255
....................    { 
....................       button(); 
0251:  CALL   12D
....................       button_password();        
0252:  CALL   15B
....................    } 
0253:  INCF   2C,F
0254:  GOTO   24D
.................... Loop:WrCmd_LCD(0x01); 
0255:  MOVLW  01
0256:  MOVWF  49
0257:  CALL   052
....................      delay_ms(10); 
0258:  MOVLW  0A
0259:  MOVWF  4A
025A:  CALL   03F
....................      lock(); 
025B:  CALL   199
....................       
....................    while(1) 
....................    { 
....................       j=0; 
025C:  CLRF   2E
....................       button(); 
025D:  CALL   12D
....................       if (value==11) 
025E:  MOVF   2F,W
025F:  SUBLW  0B
0260:  BTFSS  03.2
0261:  GOTO   31C
....................       { 
....................          SetCursor_LCD(1,0); 
0262:  MOVLW  01
0263:  MOVWF  46
0264:  CLRF   47
0265:  CALL   0A5
....................          delay_ms(10); 
0266:  MOVLW  0A
0267:  MOVWF  4A
0268:  CALL   03F
....................          sprintf(str,"Nhap MK:"); 
0269:  MOVLW  30
026A:  MOVWF  45
026B:  MOVLW  08
026C:  BSF    03.6
026D:  MOVWF  0D
026E:  MOVLW  00
026F:  MOVWF  0F
0270:  BCF    03.6
0271:  CALL   0C1
....................          WrStr_LCD(str); 
0272:  MOVLW  30
0273:  MOVWF  46
0274:  CALL   11F
....................          delay_ms(10);          
0275:  MOVLW  0A
0276:  MOVWF  4A
0277:  CALL   03F
....................          for (i=0;i<4;i++) 
0278:  CLRF   2C
0279:  MOVF   2C,W
027A:  SUBLW  03
027B:  BTFSS  03.0
027C:  GOTO   281
....................          { 
....................             button();                      
027D:  CALL   12D
....................             button_check(); 
027E:  CALL   1B9
....................         } 
027F:  INCF   2C,F
0280:  GOTO   279
....................         check_password(); 
0281:  CALL   1E1
....................         if (j!=4) 
0282:  MOVF   2E,W
0283:  SUBLW  04
0284:  BTFSC  03.2
0285:  GOTO   2A8
....................         { 
....................             WrCmd_LCD(0x01); 
0286:  MOVLW  01
0287:  MOVWF  49
0288:  CALL   052
....................             delay_ms(10); 
0289:  MOVLW  0A
028A:  MOVWF  4A
028B:  CALL   03F
....................             SetCursor_LCD(1,0); 
028C:  MOVLW  01
028D:  MOVWF  46
028E:  CLRF   47
028F:  CALL   0A5
....................             delay_ms(10); 
0290:  MOVLW  0A
0291:  MOVWF  4A
0292:  CALL   03F
....................             sprintf(str,"Sai MK"); 
0293:  MOVLW  30
0294:  MOVWF  45
0295:  MOVLW  0D
0296:  BSF    03.6
0297:  MOVWF  0D
0298:  MOVLW  00
0299:  MOVWF  0F
029A:  BCF    03.6
029B:  CALL   0C1
....................             WrStr_LCD(str); 
029C:  MOVLW  30
029D:  MOVWF  46
029E:  CALL   11F
....................             delay_ms(2000);             
029F:  MOVLW  08
02A0:  MOVWF  46
02A1:  MOVLW  FA
02A2:  MOVWF  4A
02A3:  CALL   03F
02A4:  DECFSZ 46,F
02A5:  GOTO   2A1
....................             goto Loop;             
02A6:  GOTO   255
....................         } 
....................         else 
02A7:  GOTO   31B
....................         { 
....................             WrCmd_LCD(0x01); 
02A8:  MOVLW  01
02A9:  MOVWF  49
02AA:  CALL   052
....................             delay_ms(10); 
02AB:  MOVLW  0A
02AC:  MOVWF  4A
02AD:  CALL   03F
....................             SetCursor_LCD(1,0); 
02AE:  MOVLW  01
02AF:  MOVWF  46
02B0:  CLRF   47
02B1:  CALL   0A5
....................             delay_ms(10); 
02B2:  MOVLW  0A
02B3:  MOVWF  4A
02B4:  CALL   03F
....................             sprintf(str,"MK chinh xac"); 
02B5:  MOVLW  30
02B6:  MOVWF  45
02B7:  MOVLW  11
02B8:  BSF    03.6
02B9:  MOVWF  0D
02BA:  MOVLW  00
02BB:  MOVWF  0F
02BC:  BCF    03.6
02BD:  CALL   0C1
....................             WrStr_LCD(str); 
02BE:  MOVLW  30
02BF:  MOVWF  46
02C0:  CALL   11F
....................             delay_ms(10); 
02C1:  MOVLW  0A
02C2:  MOVWF  4A
02C3:  CALL   03F
....................             open(); 
02C4:  GOTO   1F5
....................       Loop2:for (k=0;k<255;k++) 
02C5:  CLRF   2D
02C6:  INCFSZ 2D,W
02C7:  GOTO   2C9
02C8:  GOTO   2DF
....................             { 
....................                for(i=0;i<255;i++) 
02C9:  CLRF   2C
02CA:  INCFSZ 2C,W
02CB:  GOTO   2CD
02CC:  GOTO   2DD
....................                { 
....................                   for (j=0;j<57;j++) 
02CD:  CLRF   2E
02CE:  MOVF   2E,W
02CF:  SUBLW  38
02D0:  BTFSS  03.0
02D1:  GOTO   2DB
....................                   { 
....................                      if (input(PIN_C4)==1) 
02D2:  BSF    44.4
02D3:  MOVF   44,W
02D4:  BSF    03.5
02D5:  MOVWF  07
02D6:  BCF    03.5
02D7:  BTFSC  07.4
....................                      goto Loop1; 
02D8:  GOTO   2F8
....................                   } 
02D9:  INCF   2E,F
02DA:  GOTO   2CE
....................                } 
02DB:  INCF   2C,F
02DC:  GOTO   2CA
....................             } 
02DD:  INCF   2D,F
02DE:  GOTO   2C6
....................             WrCmd_LCD(0x01); 
02DF:  MOVLW  01
02E0:  MOVWF  49
02E1:  CALL   052
....................             delay_ms(10); 
02E2:  MOVLW  0A
02E3:  MOVWF  4A
02E4:  CALL   03F
....................             sprintf(str,"Cua chua dong"); 
02E5:  MOVLW  30
02E6:  MOVWF  45
02E7:  MOVLW  18
02E8:  BSF    03.6
02E9:  MOVWF  0D
02EA:  MOVLW  00
02EB:  MOVWF  0F
02EC:  BCF    03.6
02ED:  CALL   0C1
....................             WrStr_LCD(str); 
02EE:  MOVLW  30
02EF:  MOVWF  46
02F0:  CALL   11F
....................             delay_ms(10); 
02F1:  MOVLW  0A
02F2:  MOVWF  4A
02F3:  CALL   03F
....................             output_high(PIN_A2); 
02F4:  BSF    03.5
02F5:  BCF    05.2
02F6:  BCF    03.5
02F7:  BSF    05.2
....................       Loop1:button(); 
02F8:  CALL   12D
....................             if (value==12) 
02F9:  MOVF   2F,W
02FA:  SUBLW  0C
02FB:  BTFSS  03.2
02FC:  GOTO   31A
....................             { 
....................                 lock(); 
02FD:  CALL   199
....................                 output_low(PIN_A2); 
02FE:  BSF    03.5
02FF:  BCF    05.2
0300:  BCF    03.5
0301:  BCF    05.2
....................                 WrCmd_LCD(0x01); 
0302:  MOVLW  01
0303:  MOVWF  49
0304:  CALL   052
....................                 sprintf(str,"Cua dong"); 
0305:  MOVLW  30
0306:  MOVWF  45
0307:  MOVLW  1F
0308:  BSF    03.6
0309:  MOVWF  0D
030A:  MOVLW  00
030B:  MOVWF  0F
030C:  BCF    03.6
030D:  CALL   0C1
....................                 WrStr_LCD(str); 
030E:  MOVLW  30
030F:  MOVWF  46
0310:  CALL   11F
....................                 delay_ms(2000); 
0311:  MOVLW  08
0312:  MOVWF  46
0313:  MOVLW  FA
0314:  MOVWF  4A
0315:  CALL   03F
0316:  DECFSZ 46,F
0317:  GOTO   313
....................                 goto Loop; 
0318:  GOTO   255
....................             } 
....................             else 
0319:  GOTO   31B
....................                 goto Loop2; 
031A:  GOTO   2C5
....................              
....................         } 
....................      } 
....................         else if (value==13) 
031B:  GOTO   39E
031C:  MOVF   2F,W
031D:  SUBLW  0D
031E:  BTFSS  03.2
031F:  GOTO   39E
....................         { 
....................          SetCursor_LCD(1,0); 
0320:  MOVLW  01
0321:  MOVWF  46
0322:  CLRF   47
0323:  CALL   0A5
....................          sprintf(str,"Nhap MK cu :"); 
0324:  MOVLW  30
0325:  MOVWF  45
0326:  MOVLW  24
0327:  BSF    03.6
0328:  MOVWF  0D
0329:  MOVLW  00
032A:  MOVWF  0F
032B:  BCF    03.6
032C:  CALL   0C1
....................          WrStr_LCD(str); 
032D:  MOVLW  30
032E:  MOVWF  46
032F:  CALL   11F
....................          delay_ms(10); 
0330:  MOVLW  0A
0331:  MOVWF  4A
0332:  CALL   03F
....................          for (i=0;i<4;i++) 
0333:  CLRF   2C
0334:  MOVF   2C,W
0335:  SUBLW  03
0336:  BTFSS  03.0
0337:  GOTO   33C
....................          { 
....................             button(); 
0338:  CALL   12D
....................             button_check(); 
0339:  CALL   1B9
....................          } 
033A:  INCF   2C,F
033B:  GOTO   334
....................          check_password(); 
033C:  CALL   1E1
....................          if (j!=4) 
033D:  MOVF   2E,W
033E:  SUBLW  04
033F:  BTFSC  03.2
0340:  GOTO   364
....................          { 
....................             WrCmd_LCD(0x01); 
0341:  MOVLW  01
0342:  MOVWF  49
0343:  CALL   052
....................             delay_ms(10); 
0344:  MOVLW  0A
0345:  MOVWF  4A
0346:  CALL   03F
....................             SetCursor_LCD(1,0); 
0347:  MOVLW  01
0348:  MOVWF  46
0349:  CLRF   47
034A:  CALL   0A5
....................             delay_ms(10); 
034B:  MOVLW  0A
034C:  MOVWF  4A
034D:  CALL   03F
....................             sprintf(str,"Sai MK"); 
034E:  MOVLW  30
034F:  MOVWF  45
0350:  MOVLW  2B
0351:  BSF    03.6
0352:  MOVWF  0D
0353:  MOVLW  00
0354:  MOVWF  0F
0355:  BCF    03.6
0356:  CALL   0C1
....................             WrStr_LCD(str); 
0357:  MOVLW  30
0358:  MOVWF  46
0359:  CALL   11F
....................             delay_ms(2000); 
035A:  MOVLW  08
035B:  MOVWF  46
035C:  MOVLW  FA
035D:  MOVWF  4A
035E:  CALL   03F
035F:  DECFSZ 46,F
0360:  GOTO   35C
....................             j=0; 
0361:  CLRF   2E
....................             goto Loop; 
0362:  GOTO   255
....................          } 
....................          else 
0363:  GOTO   39E
....................          { 
....................             SetCursor_LCD(2,0); 
0364:  MOVLW  02
0365:  MOVWF  46
0366:  CLRF   47
0367:  CALL   0A5
....................             delay_ms(10);     
0368:  MOVLW  0A
0369:  MOVWF  4A
036A:  CALL   03F
....................             sprintf(str,"Nhap MK moi:"); 
036B:  MOVLW  30
036C:  MOVWF  45
036D:  MOVLW  2F
036E:  BSF    03.6
036F:  MOVWF  0D
0370:  MOVLW  00
0371:  MOVWF  0F
0372:  BCF    03.6
0373:  CALL   0C1
....................             WrStr_LCD(str); 
0374:  MOVLW  30
0375:  MOVWF  46
0376:  CALL   11F
....................             delay_ms(10); 
0377:  MOVLW  0A
0378:  MOVWF  4A
0379:  CALL   03F
....................             for (i=0;i<4;i++) 
037A:  CLRF   2C
037B:  MOVF   2C,W
037C:  SUBLW  03
037D:  BTFSS  03.0
037E:  GOTO   383
....................             { 
....................                button(); 
037F:  CALL   12D
....................                button_password(); 
0380:  CALL   15B
....................             } 
0381:  INCF   2C,F
0382:  GOTO   37B
....................             WrCmd_LCD(0x01); 
0383:  MOVLW  01
0384:  MOVWF  49
0385:  CALL   052
....................             delay_ms(10); 
0386:  MOVLW  0A
0387:  MOVWF  4A
0388:  CALL   03F
....................             sprintf(str,"Hoan tat cai dat"); 
0389:  MOVLW  30
038A:  MOVWF  45
038B:  MOVLW  36
038C:  BSF    03.6
038D:  MOVWF  0D
038E:  MOVLW  00
038F:  MOVWF  0F
0390:  BCF    03.6
0391:  CALL   0C1
....................             WrStr_LCD(str); 
0392:  MOVLW  30
0393:  MOVWF  46
0394:  CALL   11F
....................             delay_ms(2000); 
0395:  MOVLW  08
0396:  MOVWF  46
0397:  MOVLW  FA
0398:  MOVWF  4A
0399:  CALL   03F
039A:  DECFSZ 46,F
039B:  GOTO   397
....................             j=0; 
039C:  CLRF   2E
....................             goto Loop; 
039D:  GOTO   255
....................          } 
....................       }   
....................    }   
039E:  GOTO   25C
.................... } 
....................              
....................              
....................              
....................           
....................           
....................           
....................     
....................        
....................           
....................     
....................     
....................  
....................   
....................  
039F:  SLEEP

Configuration Fuses:
   Word  1: 3F3A   HS NOWDT NOPUT NODEBUG NOPROTECT NOBROWNOUT NOLVP NOCPD NOWRT
